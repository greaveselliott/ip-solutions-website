$ips-colours-list:
"blue"    $ips-blue,
"green"   $ips-green,
"grey"    $ips-grey,
"cyan"    $ips-cyan,
"purple"  $ips-purple,
"orange"  $ips-orange,
"white" #FFFFFF,
"black" #000000,
"trasparent" transparent;

@each $i in $ips-colours-list {
  @include responsive_property (text-#{nth($i,1)}) {
    color: #{nth($i,2)} !important;
  }

  @include responsive_property(background-#{nth($i,1)}){
    background-color: #{nth($i,2)};

    @for $j from 1 through 20 {
      &.opacity-#{5 * $j}{
        background-color: #{rgba(nth($i,2), (0.05 * $j))};
      }
    }
  }


  // border size 2 - Lower Opacity
  @include responsive_property(border-2-#{nth($i,1)}-opacity){
    border: solid $ips-border-width-2 rgba(nth($i,2),$border-opacity); -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-2-top-#{nth($i,1)}-opacity){border-top: solid $ips-border-width-2 rgba(nth($i,2),$border-opacity); -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-2-right-#{nth($i,1)}-opacity){border-right: solid $ips-border-width-2 rgba(nth($i,2),$border-opacity); -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-2-bottom-#{nth($i,1)}-opacity){border-bottom: solid $ips-border-width-2 rgba(nth($i,2),$border-opacity); -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-2-left-#{nth($i,1)}-opacity){border-left: solid $ips-border-width-2 rgba(nth($i,2),$border-opacity); -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }

  // border size 3 - Lower Opacity
  @include responsive_property(border-3-#{nth($i,1)}-opacity){
    border: solid $ips-border-width-3 rgba(nth($i,2),$border-opacity); -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-3-top-#{nth($i,1)}-opacity){border-top: solid $ips-border-width-3 rgba(nth($i,2),$border-opacity); -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-3-right-#{nth($i,1)}-opacity){border-right: solid $ips-border-width-3 rgba(nth($i,2),$border-opacity); -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-3-bottom-#{nth($i,1)}-opacity){border-bottom: solid $ips-border-width-3 rgba(nth($i,2),$border-opacity); -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-3-left-#{nth($i,1)}-opacity){border-left: solid $ips-border-width-3 rgba(nth($i,2),$border-opacity); -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }


  // border size 1
  @include responsive_property(border-1-#{nth($i,1)}){border: solid $ips-border-width-1 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-1-top-#{nth($i,1)}){border-top: solid $ips-border-width-1 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-1-right-#{nth($i,1)}){border-right: solid $ips-border-width-1 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-1-bottom-#{nth($i,1)}){border-bottom: solid $ips-border-width-1 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-1-left-#{nth($i,1)}){border-left: solid $ips-border-width-1 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }

  // border size 2
  @include responsive_property(border-2-#{nth($i,1)}){border: solid $ips-border-width-2 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-2-top-#{nth($i,1)}){border-top: solid $ips-border-width-2 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-2-right-#{nth($i,1)}){border-right: solid $ips-border-width-2 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-2-bottom-#{nth($i,1)}){border-bottom: solid $ips-border-width-2 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-2-left-#{nth($i,1)}){border-left: solid $ips-border-width-2 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }

  // border size 3
  @include responsive_property(border-3-#{nth($i,1)}){border: solid $ips-border-width-3 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-3-top-#{nth($i,1)}){border-top: solid $ips-border-width-3 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-3-right-#{nth($i,1)}){border-right: solid $ips-border-width-3 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-3-bottom-#{nth($i,1)}){border-bottom: solid $ips-border-width-3 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-3-left-#{nth($i,1)}){border-left: solid $ips-border-width-3 #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }

  // border size none0 - Zero pixels
  @include responsive_property(border-none0-#{nth($i,1)}){border: solid 0px #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-none0-top-#{nth($i,1)}){border-top: solid 0px #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-none0-right-#{nth($i,1)}){border-right: solid 0px #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-none0-bottom-#{nth($i,1)}){border-bottom: solid 0px #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
  @include responsive_property(border-none0-left-#{nth($i,1)}){border-left: solid 0px #{nth($i,2)}; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }


  // outline size 2 - Lower Opacity
  @include responsive_property(outline-2-#{nth($i,1)}-opacity){
    outline: solid $ips-outline-width-2 rgba(nth($i,2),$outline-opacity); -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-2-top-#{nth($i,1)}-opacity){outline-top: solid $ips-outline-width-2 rgba(nth($i,2),$outline-opacity); -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-2-right-#{nth($i,1)}-opacity){outline-right: solid $ips-outline-width-2 rgba(nth($i,2),$outline-opacity); -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-2-bottom-#{nth($i,1)}-opacity){outline-bottom: solid $ips-outline-width-2 rgba(nth($i,2),$outline-opacity); -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-2-left-#{nth($i,1)}-opacity){outline-left: solid $ips-outline-width-2 rgba(nth($i,2),$outline-opacity); -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }

  // outline size 1
  @include responsive_property(outline-1-#{nth($i,1)}){outline: solid $ips-outline-width-1 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-1-top-#{nth($i,1)}){outline-top: solid $ips-outline-width-1 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-1-right-#{nth($i,1)}){outline-right: solid $ips-outline-width-1 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-1-bottom-#{nth($i,1)}){outline-bottom: solid $ips-outline-width-1 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-1-left-#{nth($i,1)}){outline-left: solid $ips-outline-width-1 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }

  // outline size 2
  @include responsive_property(outline-2-#{nth($i,1)}){outline: solid $ips-outline-width-2 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-2-top-#{nth($i,1)}){outline-top: solid $ips-outline-width-2 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-2-right-#{nth($i,1)}){outline-right: solid $ips-outline-width-2 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-2-bottom-#{nth($i,1)}){outline-bottom: solid $ips-outline-width-2 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-2-left-#{nth($i,1)}){outline-left: solid $ips-outline-width-2 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }

  // outline size 3
  @include responsive_property(outline-3-#{nth($i,1)}){outline: solid $ips-outline-width-3 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-3-top-#{nth($i,1)}){outline-top: solid $ips-outline-width-3 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-3-right-#{nth($i,1)}){outline-right: solid $ips-outline-width-3 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-3-bottom-#{nth($i,1)}){outline-bottom: solid $ips-outline-width-3 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-3-left-#{nth($i,1)}){outline-left: solid $ips-outline-width-3 #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }

  // outline size none0 - Zero pixels
  @include responsive_property(outline-none0-#{nth($i,1)}){outline: solid 0px #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-none0-top-#{nth($i,1)}){outline-top: solid 0px #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-none0-right-#{nth($i,1)}){outline-right: solid 0px #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-none0-bottom-#{nth($i,1)}){outline-bottom: solid 0px #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }
  @include responsive_property(outline-none0-left-#{nth($i,1)}){outline-left: solid 0px #{nth($i,2)}; -moz-box-sizing: outline-box; -webkit-box-sizing: outline-box;box-sizing: outline-box; }

  // buttons
  .btn-#{nth($i,1)} {
    background: transparent !important;
    @extend .border-2-#{nth($i,1)};
    @extend .text-#{nth($i,1)};
    -webkit-transition: all 0.12s ease-in;
    -moz-transition: all 0.12s ease-in;
    -ms-transition: all 0.12s ease-in;
    -o-transition: all 0.12s ease-in;
    transition: all 0.12s ease-in;

    &:hover {
      background: nth($i, 2) !important;
      @extend .border-2-#{nth($i,1)};
      @extend .text-white;
      @if #{nth($i,1)} == "white" {
        @extend .text-black;
      }
    }
  }
  // If the buttons parent element has a background-color set, set buttons text colour on hover to the background colour - Creating the illusion of masking text
  .background-#{nth($i,1)} {
    .btn:hover {
      color: nth($i, 2) !important;
    }
  }
}

@include responsive_property(border-none){border: none; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }
@include responsive_property(border-none-important){border: none !important; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;box-sizing: border-box; }